spring:
  application:
    name: music-school-management
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:26257}/${DB_NAME:musicschool}?sslmode=${DB_SSL_MODE:require}
    username: ${DB_USERNAME:musicschool}
    password: ${DB_PASSWORD:musicschool123}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Production SMTP Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: ${MAIL_SSL_TRUST:}
        debug: false

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.musicschool: INFO
    org.springframework.security: WARN
    org.springframework.mail: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/music-school.log

vaadin:
  productionMode: true
  closeIdleSessions: true
  heartbeatInterval: 300

# Production JWT Configuration
jwt:
  secret: ${JWT_SECRET:}
  expiration: ${JWT_EXPIRATION:86400}

# Production Stripe Configuration
stripe:
  secret-key: ${STRIPE_SECRET_KEY:}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY:}

# Production Multi-tenancy
multitenancy:
  default-tenant: ${DEFAULT_TENANT:default}
  tenant-header: X-Tenant-ID
  tenant-parameter: tenant
