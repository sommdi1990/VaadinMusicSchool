services:
  # CockroachDB Database
  cockroachdb:
    image: cockroachdb/cockroach:v23.2.0
    container_name: musicschool-db-prod
    command: start-single-node --insecure --http-addr=0.0.0.0:8080 --listen-addr=0.0.0.0:26257
    ports:
      - "26257:26257"
      - "8081:8080"
    volumes:
      - cockroach-data:/cockroach/cockroach-data
    environment:
      - COCKROACH_DATABASE=musicschool
      - COCKROACH_DEVELOPER_MODE=true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - musicschool-network

  # Music School Application (Production)
  musicschool-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: musicschool-app-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DB_HOST=${DB_HOST:-cockroachdb}
      - DB_PORT=${DB_PORT:-26257}
      - DB_NAME=${DB_NAME:-musicschool}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME:-}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-}
      - MAIL_SSL_TRUST=${MAIL_SSL_TRUST:-}
      - JWT_SECRET=${JWT_SECRET:-}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-}
      - DEFAULT_TENANT=${DEFAULT_TENANT:-default}
      - MANAGEMENT_HEALTH_MAIL_ENABLED=true
    depends_on:
      cockroachdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/music-school/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - musicschool-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: musicschool-redis-prod
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - musicschool-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: musicschool-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - musicschool-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: musicschool-grafana-prod
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - musicschool-network

  flyway:
    image: flyway/flyway:10
    command: -url=jdbc:postgresql://cockroachdb:26257/musicschool?sslmode=disable -user=root -password= -connectRetries=20 -baselineOnMigrate=true migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      cockroachdb:
        condition: service_healthy
    restart: on-failure
    networks:
      - musicschool-network

volumes:
  cockroach-data:
  grafana-data:
  redis-data:

networks:
  musicschool-network:
    driver: bridge
